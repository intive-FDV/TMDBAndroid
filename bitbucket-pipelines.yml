# Bitbucket Pipelines Template to build, test your Android Application.

# This template contains 3 parallel steps to build Android application, run Android code scanning tool and run unit tests.
# For more details see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/

# Docker for Android SDK 30 with pre-installed build tools and emulator image.
# Note: This docker image is created and maintained by a non official third party. For more details see: https://hub.docker.com/r/androidsdk/android-30
image: androidsdk/android-30

#Doc

#*****Be cautious of the time limit the free Bitbucket plan provides, 50 minutes per month. Running too many tasks/tests might consume this limit pretty quickly.****

#default — All commits trigger this pipeline, unless they match one of the other sections
#branches — Specify the name of a branch
#Step: each step starts a new Docker container that includes a clone of your repository and then runs the contents of your script section inside it. You can to just use one step and put all commands under the script section for this step.
#Caches: Define dependencies to cache on Bitbucket servers to reduce load time, to avoid downloading it every time.
#Artifacts: Defines files that are produced by a step, such as reports or JAR, AAR or APK files, that you want to share with the following step.

test: &test
  step:
    name: Test
    caches:
      - gradle    # caching speed up subsequent execution https://support.atlassian.com/bitbucket-cloud/docs/cache-dependencies/
      script:
        - echo "Starting test..."
        - ./gradlew testDebugUnitTest # test reporting is automatically enabled https://support.atlassian.com/bitbucket-cloud/docs/test-reporting-in-pipelines/

lint: &lint
  step:
    name: Lint
    caches: # caching speed up subsequent execution https://support.atlassian.com/bitbucket-cloud/docs/cache-dependencies/
      - gradle
      script:
        - echo "Starting lint..."
        - ./gradlew lint
      artifacts:
        - app/build/reports/**        # artifacts are files that are produced by a step https://support.atlassian.com/bitbucket-cloud/docs/use-artifacts-in-steps/

build: &build
  step:
    name: Build
    caches: # caching speed up subsequent execution https://support.atlassian.com/bitbucket-cloud/docs/cache-dependencies/
      - gradle
    script:
      - echo "Starting build..."
      - ./gradlew assembleDebug
     artifacts:
       - app/build/outputs/** # artifacts are files that are produced by a step https://support.atlassian.com/bitbucket-cloud/docs/use-artifacts-in-steps/
    after-script:
      - ALERT_TYPE="success"
      - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="error" ; fi
      - pipe: atlassian/email-notify:0.4.5
        variables:
          USERNAME: 'myemail@example.com'
          PASSWORD: $PASSWORD
          FROM: 'tmdba2021@gmail.com'
          TO: 'francisco.beccuti@intive.com, example2@example.com'
          HOST: 'smtp.gmail.com'
          SUBJECT: '${ALERT_TYPE}:Bitbucket Pipe Notification for ${BITBUCKET_BRANCH}'


pipelines:
  default:                # pipeline definition for all branches
    - parallel:           # running a set of steps at the same time https://support.atlassian.com/bitbucket-cloud/docs/set-up-or-run-parallel-steps/
        - <<: *test
        - <<: *lint
      # - <<: *build
  branches:
    master:
      - <<: *test
      - <<: *lint
      - <<: *build
